{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pc/Documentos/github-repositorio-projeto/src/pages/Dashboard/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Title, Form, Repositories } from './styles';\nimport { FiChevronRight } from 'react-icons/fi';\nimport logoImg from \"../../assets/images/logotipo.svg\"; //import Repository from '../Repository';\n\nconst Dashboard = () => {\n  _s();\n\n  const [newRepo, setNewRepo] = useState(''); // Estado para armazenar o valor do input\n\n  const [repositories, setRepositories] = useState([]); //Vai armazenar os repositórios usando o useState\n\n  function hundleAddRepository(event) {\n    //Adição de um novo repositŕoio\n    //Consumir a API do Github\n    //Salvar novo respositório no estado\n\n    /* (event: FormEvent<HTMLFormElement>) junto com o event.preventDefault();\n    Previne o evento de recarregar a página sempre quando clica, nesse caso teve essa extenção maior porque o evento é no form, por isso, teve que importar o FormEvent tambem.\n    */\n    event.preventDefault();\n  }\n  /* No input, o valor que vai receber é o value={newRepo}\n  Quando o usuário altera o valor desse input, recebe um evento onChange={(e) => setNewRepo(e.target.value)}\n  */\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logoImg,\n      alt: \"Github Explorer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Title, {\n      children: \"Explore reposit\\xF3rios no Github\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: hundleAddRepository,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Digite o nome do reposit\\xF3rio\",\n        value: newRepo,\n        onChange: e => setNewRepo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Pesquisar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Repositories, {\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"teste\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://avatars1.githubusercontent.com/u/37426078?s=460&u=88c91ea9279079b493564ad2d08e979471e67df1&v=4\",\n          alt: \"Mercia Keila\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Docs com Gatsby\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"gatsby-starter-rocket-docs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(FiChevronRight, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"teste\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://avatars1.githubusercontent.com/u/37426078?s=460&u=88c91ea9279079b493564ad2d08e979471e67df1&v=4\",\n          alt: \"Mercia Keila\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Docs com Gatsby\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"gatsby-starter-rocket-docs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(FiChevronRight, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"teste\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://avatars1.githubusercontent.com/u/37426078?s=460&u=88c91ea9279079b493564ad2d08e979471e67df1&v=4\",\n          alt: \"Mercia Keila\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Docs com Gatsby\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"gatsby-starter-rocket-docs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(FiChevronRight, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Dashboard, \"9YWBVAaaWt2rSNmbXjgX8puY7YM=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/pc/Documentos/github-repositorio-projeto/src/pages/Dashboard/index.tsx"],"names":["React","useState","Title","Form","Repositories","FiChevronRight","Dashboard","newRepo","setNewRepo","repositories","setRepositories","hundleAddRepository","event","preventDefault","logoImg","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState, FormEvent} from 'react';\nimport {Title, Form, Repositories} from './styles';\nimport {FiChevronRight} from 'react-icons/fi';\nimport api from '../../services/api';\nimport logoImg from '../../assets/images/logotipo.svg';\n//import Repository from '../Repository';\n\nconst Dashboard: React.FC = () => {\n  const [newRepo, setNewRepo] = useState(''); // Estado para armazenar o valor do input\n  const [repositories, setRepositories] = useState([])//Vai armazenar os repositórios usando o useState\n\n  function hundleAddRepository(event: FormEvent<HTMLFormElement>): void {\n    //Adição de um novo repositŕoio\n    //Consumir a API do Github\n    //Salvar novo respositório no estado\n    /* (event: FormEvent<HTMLFormElement>) junto com o event.preventDefault();\n    Previne o evento de recarregar a página sempre quando clica, nesse caso teve essa extenção maior porque o evento é no form, por isso, teve que importar o FormEvent tambem.\n    */\n\n    event.preventDefault();\n  }\n\n  /* No input, o valor que vai receber é o value={newRepo}\n  Quando o usuário altera o valor desse input, recebe um evento onChange={(e) => setNewRepo(e.target.value)}\n  */\n\n  return (\n    <>\n    <img src={logoImg} alt=\"Github Explorer\" />\n    <Title>Explore repositórios no Github</Title>\n\n    <Form onSubmit={hundleAddRepository}>\n      <input placeholder=\"Digite o nome do repositório\" value={newRepo} onChange={(e) => setNewRepo(e.target.value)}/>\n      <button type=\"submit\">\n        Pesquisar\n      </button>\n    </Form>\n\n    <Repositories>\n      <a href=\"teste\">\n        <img src=\"https://avatars1.githubusercontent.com/u/37426078?s=460&u=88c91ea9279079b493564ad2d08e979471e67df1&v=4\" alt=\"Mercia Keila\"/>\n\n        <div>\n          <strong>Docs com Gatsby</strong>\n          <p>gatsby-starter-rocket-docs</p>\n        </div>\n        <FiChevronRight size={20}/>\n      </a>\n\n      <a href=\"teste\">\n        <img src=\"https://avatars1.githubusercontent.com/u/37426078?s=460&u=88c91ea9279079b493564ad2d08e979471e67df1&v=4\" alt=\"Mercia Keila\"/>\n\n        <div>\n          <strong>Docs com Gatsby</strong>\n          <p>gatsby-starter-rocket-docs</p>\n        </div>\n        <FiChevronRight size={20}/>\n      </a>\n\n      <a href=\"teste\">\n        <img src=\"https://avatars1.githubusercontent.com/u/37426078?s=460&u=88c91ea9279079b493564ad2d08e979471e67df1&v=4\" alt=\"Mercia Keila\"/>\n\n        <div>\n          <strong>Docs com Gatsby</strong>\n          <p>gatsby-starter-rocket-docs</p>\n        </div>\n        <FiChevronRight size={20}/>\n      </a>\n    </Repositories>\n    </>\n  )\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}